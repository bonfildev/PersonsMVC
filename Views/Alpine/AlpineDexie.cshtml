@model List<PersonsMVC.Models.PersonsTasks>
@using Newtonsoft.Json

<script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/dexie@3.2.4/dist/dexie.min.js"></script>

<div x-data="taskHandler(@Html.Raw(JsonConvert.SerializeObject(Model)))" x-init="init()" class="p-6">
    <div class="flex gap-3 mb-4">
        <button class="bg-green-500 text-white px-3 py-1 rounded" @@click="addRow()">Add Task</button>
        <button class="bg-blue-500 text-white px-3 py-1 rounded" @@click="postToServer()">Save All</button>
        <button class="bg-red-500 text-white px-3 py-1 rounded" @@click="clearLocal()">Clear Local</button>
    </div>

    <table class="w-full table-auto bg-white shadow rounded">
        <thead class="bg-gray-200">
            <tr>
                <th class="p-2">Description</th>
                <th class="p-2">Register Date</th>
                <th class="p-2">Finished</th>
                <th class="p-2">ID Person</th>
                <th class="p-2">Actions</th>
            </tr>
        </thead>
        <tbody>
            <template x-for="(task, index) in tasks" :key="task.Idtask">
                <tr>
                    <td class="p-2"><input type="text" x-model="task.Description" class="border w-full" @@input="saveTask(task)" /></td>
                    <td class="p-2"><input type="date" x-model="task.RegisterDate" class="border w-full" @@input="saveTask(task)" /></td>
                    <td class="p-2"><input type="checkbox" x-model="task.Finished" @@change="saveTask(task)" /></td>
                    <td class="p-2"><input type="number" x-model="task.IDPerson" class="border w-full" @@input="saveTask(task)" /></td>
                    <td class="p-2"><button type="button" @@click="removeRow(index)" class="bg-red-500 text-white px-2 py-1 rounded">Delete</button></td>
                </tr>
            </template>
        </tbody>
    </table>
</div>

<script>
    function taskHandler(serverData) {
        // Dexie database
        const db = new Dexie("TaskAppDB");
        db.version(1).stores({
            tasks: 'Idtask'
        });

        return {
            tasks: [],
            async init() {
                const count = await db.tasks.count();
                this.tasks = count > 0 ? await db.tasks.toArray() : serverData;

                // Save any server-loaded rows locally
                if (count === 0) {
                    await db.tasks.bulkPut(this.tasks);
                }
            },
            async addRow() {
                const newTask = {
                    Idtask: Date.now(),
                    Description: '',
                    RegisterDate: null,
                    Finished: false,
                    IDPerson: 0
                };
                this.tasks.push(newTask);
                await db.tasks.put(newTask);
            },
            async saveTask(task) {
                await db.tasks.put(task);
            },
            async removeRow(index) {
                const task = this.tasks[index];
                await db.tasks.delete(task.Idtask);
                this.tasks.splice(index, 1);
            },
            async clearLocal() {
                await db.tasks.clear();
                this.tasks = [];
            },
            async postToServer() {
                const all = await db.tasks.toArray();
                await fetch('/AlpineController/SaveIndexed', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(all)
                }).then(res => {
                    if (res.ok) alert("Saved to SQL Server!");
                    else alert("Failed to save!");
                });
            }
        };
    }
</script>
